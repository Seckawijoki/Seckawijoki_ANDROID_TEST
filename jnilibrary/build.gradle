apply plugin: 'com.android.library'

android {
  compileSdkVersion 27
  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 27
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    ndk {
      abiFilters "armeabi-v7a"
    }
  }
  sourceSets.main {
    jniLibs.srcDirs = ['src/main/libs'] //set libs as .so's location instead of jniLibs
    jni.srcDirs = [] //disable automatic ndk-build call with auto-generated Android.mk
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  buildToolsVersion '27.0.3'
}
task clearJar(type: Delete){
    delete 'libs/seckawijoki-jnilibrary-test.jar'
}
task makeJar(type: Copy) {
//    //指定生成的jar名
//    archivesBaseName = "seckawijoki-jnilibrary-test"
////    appendix = "demo"
//    version = "1.0.0"
////    classifier = "release"
//    //后缀名
////    extension = "jar"
//    //最终的 Jar 包名，如果没设置archiveName，默认为 [baseName]-[appendix]-[version]-[classifier].[extension]
////    archiveName = "AndroidJarDemo.jar"
//
//    //从哪里打包class文件
//    from('build/intermediates/packaged-classes/release/')
//    //打包到jar后的目录结构
//    into('libs/')
//    //去掉不需要打包的目录和文件
//    exclude('test/', 'BuildConfig.class', 'R.class')
//    //去掉R$开头的文件
//    exclude{ it.name.startsWith('R$');}

//    delete 'build/libs/seckawijoki-jnilibrary-test.jar'
//    from('build/intermediates/packaged-classes/release/')
//    into('build/libs/')
//    include('classes.jar')
//    rename ('classes.jar', 'seckawijoki-jnilibrary-test.jar')
}
//makeJar.dependsOn(clearJar, build)
makeJar.dependsOn(build)
//在终端执行生成JAR包
// gradlew makeJar

dependencies {
  compile fileTree(include: ['*.jar'], dir: 'libs')
  compile 'com.android.support:appcompat-v7:27.1.1'
  testCompile 'junit:junit:4.12'
  testCompile 'com.android.support.test:runner:1.0.2'
  testCompile 'com.android.support.test.espresso:espresso-core:3.0.2'
}
