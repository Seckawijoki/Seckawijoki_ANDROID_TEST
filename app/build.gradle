apply plugin: 'com.android.application'
//apply plugin: 'com.tencent.tinker.patch'
// 注：需要配置符号表时，使用bugly插件
apply plugin: 'bugly'
bugly {
    appId = '01317585be'
    appKey = '64de9b40-5572-4783-bb56-b6304fbe10fc'
}
/*
除了appId和appKey之外，还可以设置其他属性，属性列表如下：
属性	值	说明
appId	String	App ID
appKey	String	App Key
execute	boolean	插件开关
upload	boolean	上传开关
outputDir	String	符号表文件输出路径
 */

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.seckawijoki.androidtest"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0.0"
        // Specifies a flavor dimension.
        flavorDimensions "demo"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        jackOptions {
            enabled true
        }
        ndk{
            abiFilters "armeabi-v7a"
            ldLibs "log"
        }
//        ndk {            moduleName = "androidTest"        }
        // for detailed abiFilter descriptions, refer to "Supported ABIs" @
        // https://developer.android.com/ndk/guides/abis.html#sa
//        create("arm") {            ndk.abiFilters.add("armeabi")        }
//        create("arm7") {            ndk.abiFilters.add("armeabi-v7a")        }
//        create("arm8") {            ndk.abiFilters.add("arm64-v8a")        }
//        create("x86") {            ndk.abiFilters.add("x86")        }
//        create("x86-64") {            ndk.abiFilters.add("x86_64")        }
//        create("mips") {            ndk.abiFilters.add("mips")        }
//        create("mips-64") {            ndk.abiFilters.add("mips64")        }
        // To include all cpu architectures, leaves abiFilters empty
//        create("all")
    }

    productFlavors {
        demo {
            dimension "demo"
            versionName "1.0.0"
        }

    }
//    sourceSets.main{ // Ndk-build in batch script does not use the codes. It's for Android Studio inner build.
//            jniLibs.srcDirs = ['src/main/libs'] //set libs as .so's location instead of jniLibs
//            jni.srcDirs = [] //disable automatic ndk-build call with auto-generated Android.mk
//    }
    buildTypes {
        release {
            minifyEnabled true
            multiDexEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules2.pro'
        }
    }
//    externalNativeBuild{
//        cmake{
//            path "CMakeLists.txt"
//            abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'armeabi-v8a'
//        }
//    }
//    aaptOptions {        cruncherEnabled=false        useNewCruncher=false    }
    repositories {
        maven {
            url 'https://jitpack.io'
        }
    }
//    dexOptions {        incremental false    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    dataBinding{
//        enabled = true
//    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:27.1.1'
    compile 'com.android.support:design:27.1.1'
    compile 'com.android.support.constraint:constraint-layout:1.1.2'
    testCompile 'junit:junit:4.12'
    compile 'com.xiaoleilu:hutool-all:3.0.9'
    //注解库 用于生成application类 provided编译不打包
    //    compileOnly ('com.tencent.tinker:tinker-android-anno:1.7.7') { changing = true }
    //是否将依赖关系标记为正在改变
    //tinker的核心库 compile编译并打包
    //    compile ('com.tencent.tinker:tinker-android-lib:1.7.7') { changing = true }
    //optional, help to generate the final application
    //    compileOnly ('com.tencent.tinker:tinker-android-anno:1.9.1')
    //tinker's main Android lib
    //    compile ('com.tencent.tinker:tinker-android-lib:1.9.1')
    compile files('libs/Android_Map3D_SDK_V6.1.0_20180330.jar')
    //    compile 'com.jakewharton:butterknife:8.8.1'
    //    compile 'com.jakewharton:butterknife-compiler:8.8.1'
    //    compile 'com.jakewharton:butterknife:8.8.1'
    //    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'com.github.Seckawijoki:ProgressingBar:1.0'
    compile 'com.github.Seckawijoki:ScoreSectorView:1.0'
    compile files('libs/BRecorder.jar')
    compile 'com.android.support:cardview-v7:27.1.1'
//    compile project(':annotation')
//    compile project(':jnilibrary')
    compile files('libs/bugly_crash_release.jar')

    // 其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.7
    // (注：从2.1.5开始要分开Bugly SDK和NDK的配置）
//    compile 'com.tencent.bugly:crashreport:2.6.6.1' //会出现Program type already present: com.tencent.bugly.BuglyStrategy错误，暂时使用本地jar包
//    compile 'com.tencent.bugly:nativecrashreport:3.3.1'
}
